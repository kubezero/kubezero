---
apiVersion: batch/v1
kind: Job
metadata:
  name: argocd-cluster-secret-job
  annotations:
    argocd.argoproj.io/sync-wave: "90"
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      serviceAccountName: access-secrets-sa
      containers:
      - name: configure-argocd-cluster-secret
        image: bitnami/kubectl:latest
        envFrom:
        - configMapRef:
            name: vcluster-env-vars-cm
        command:
        - /bin/sh
        - -c
        - |
          # Wait for vcluster-kubeconfig to be available
          while ! kubectl get secret vcluster-kubeconfig -n ${VCLUSTER_NAMESPACE} > /dev/null 2>&1; do
            echo "Waiting for vcluster-kubeconfig secret..."
            sleep 5
          done

          # Get the kubeconfig from the secret
          KUBECONFIG_DATA=$(kubectl get secret vcluster-kubeconfig -n ${VCLUSTER_NAMESPACE} -o jsonpath='{.data.config}')
          
          # Decode the kubeconfig
          KUBECONFIG=$(echo $KUBECONFIG_DATA | base64 -d)
          
          # Extract the token
          TOKEN=$(echo "$KUBECONFIG" | grep 'token:' | head -n1 | awk -F'token:' '{print $2}' | xargs)
          
          # Create ArgoCD cluster secret
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: ${ARGOCD_CLUSTER_SECRET_NAME}
            namespace: kubezero
            labels:
              argocd.argoproj.io/secret-type: cluster
          type: Opaque
          stringData:
            name: ${ARGOCD_CLUSTER_NAME}
            server: https://vcluster.${VCLUSTER_NAMESPACE}:443
            config: |
              {
                "bearerToken": "$TOKEN",
                "tlsClientConfig": {
                  "insecure": true
                }
              }
          EOF

          # Check if the secret was created successfully
          if kubectl get secret ${ARGOCD_CLUSTER_SECRET_NAME} -n kubezero > /dev/null 2>&1; then
            echo "Secret created successfully!"
          else
            echo "Failed to create the secret ${ARGOCD_CLUSTER_SECRET_NAME} in namespace kubezero" >&2
            exit 1
          fi
      restartPolicy: OnFailure
